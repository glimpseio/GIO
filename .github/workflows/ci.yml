name: Glimpse CI
  
on:
  push:
    branches: '*'
    tags: '*'

    # build at 6AM & 6PM UTC
    schedule: 
      - cron:  '0 6,18 * * *'

jobs:
  build:
    name: Glimpse CI

    #runs-on: macos-11.0
    #runs-on: macos-latest
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [macos-latest, macos-11.0]

    environment: Signing
    timeout-minutes: 240
    env:
      ORG_NAME: glimpseio 
      REPO_NAME: GIO
      APP_NAME: Glimpse
      TEST_NAME: Glimpse
      #CONFIGURATION: Release
      CONFIGURATION: Debug
    
    steps:
      #- name: Cancel Previous Runs
      #uses: styfle/cancel-workflow-action@0.8.0
      #with:
      #access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0 # https://github.com/actions/checkout/issues/100
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: "Configure Versions"
        id: config
        run: |
          echo "::set-output name=tagname::${GITHUB_REF#refs/*/}"
          echo "::set-output name=buildnumber::$(git rev-list --count ${GITHUB_REF#refs/*/})"

      - name: Run Tests
        # disable tests to speed up CI or enable macos-latest (10.15)
        # if: false 
        if: matrix.os == 'macos-11.0'
        run: |
          xcodebuild -scheme "Glimpse" test CODE_SIGNING_ALLOWED=NO \
            -skip-testing:GlimpseTests/GlimpseTests \
            -skip-testing:GlanceTests/VegaLiteTests/testCompleteSamples \
            -skip-testing:GlanceTests/VegaLiteTests/testExampleSamples \
            -skip-testing:GlanceTests/VegaTests/testDateTemporalFormats \
            -skip-testing:GlanceTests/VegaLiteTests/testSimpleSample

      - name: "Setup Export"
        run: |
          mkdir -p Export/
          echo '<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:sparkle="http://www.andymatuschak.org/xml-namespaces/sparkle"><channel><item><enclosure sparkle:version="${{ steps.config.outputs.buildnumber }}" sparkle:shortVersionString="${{ steps.config.outputs.tagname }}" url="https://github.com/${{ env.ORG_NAME }}/${{ env.REPO_NAME }}/releases/download/${{ steps.config.outputs.tagname }}/${{ env.APP_NAME }}.zip"></enclosure></item></channel></rss>' > Export/appcast.xml
          cat Export/appcast.xml
          
      - name: "Build Archive"
        if: matrix.os == 'macos-latest'
        run:
          xcodebuild archive -configuration "${{ env.CONFIGURATION }}" -scheme "${{ env.APP_NAME }}" -archivePath "Export/${{ env.APP_NAME }}.xcarchive" COMPILER_INDEX_STORE_ENABLE="NO" MARKETING_VERSION="${{ steps.config.outputs.tagname }}" CURRENT_PROJECT_VERSION="${{ steps.config.outputs.buildnumber }}"

      - name: "Notarize"
        if: matrix.os == 'macos-latest'
        uses: hubomatic/hubomat@0.1.0
        with:
          verbose: true
          staple: true
          timeout: 120 # minutes
          team-id: ${{ secrets.TEAM_ID }}
          export-path: "Export/"
          archive-path: "Export/${{ env.APP_NAME }}.xcarchive"
          product-path: "Export/${{ env.APP_NAME }}.app"
          artifact-path: "Export/${{ env.APP_NAME }}.zip"
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
          certificate-data: ${{ secrets.DISTRIBUTION_CERTIFICATE_DATA }}
          certificate-passphrase: ${{ secrets.DISTRIBUTION_CERTIFICATE_PASSPHRASE }}
          appstore-connect-username: ${{ secrets.NOTARIZATION_USERNAME }}
          appstore-connect-password: ${{ secrets.NOTARIZATION_PASSWORD }}

      - name: "Check Code Signature"
        run: 
          codesign --deep -vvv --verify "Export/${{ env.APP_NAME }}.app"
          
      - name: "Check Gatekeeper"
        run: spctl -a -t exec -vv "Export/${{ env.APP_NAME }}.app"

      - name: Upload Build Artifact Zip
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.APP_NAME }}.zip
          path: Export/${{ env.APP_NAME }}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          #body_path: RELEASE_NOTES.md
          files: |
            CHANGELOG.md
            RELEASE_NOTES.md
            Export/appcast.xml
            Export/${{ env.APP_NAME }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



